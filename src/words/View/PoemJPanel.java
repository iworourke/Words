/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package words.View;

import java.awt.Dimension;
import java.util.ArrayList;
import javax.swing.BoxLayout;
import javax.swing.JPanel;
import words.Line;
import words.Poem;

/**
 *
 * @author iworourke
 */
public class PoemJPanel extends JPanel {

    private Poem poem;
    private ArrayList<LineJPanel> linePanels;
    
    /**
     * Creates new form PoemJPanel
     */
    public PoemJPanel() {
        initComponents();
        
        poem = new Poem();
        linePanels = new ArrayList<>();
        
        revalidate();
        repaint();
    }
    
    public PoemJPanel(Poem p) {
        System.out.println("creating poem panel with poem...");
        initComponents();
        refreshPoem(p);
    }
    
    @Override
    public Dimension getPreferredSize() {
        return new Dimension(1010, 320);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setBackground(new java.awt.Color(51, 51, 51));
        setPreferredSize(new java.awt.Dimension(1010, 320));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 901, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 221, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    void refreshPoem(Poem poem) {
        poem = new Poem(poem);
        linePanels = new ArrayList<>();
        ArrayList<Line> lineList = poem.getLines();
        
        for (Line l : lineList) {
            linePanels.add(new LineJPanel(l));
        }
        
        setLayout(new BoxLayout(this, BoxLayout.PAGE_AXIS));
        
        for (LineJPanel panel : linePanels) {
            add(panel);   
        }
        
        revalidate();
        repaint();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables

}
